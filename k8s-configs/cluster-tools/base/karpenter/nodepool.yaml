apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  template:
    metadata:
        labels:
          nodeType: fleet
    spec:
      nodeClassRef:
        name: default
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m", "r", "t"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["arm64"]
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["spot", "on-demand"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
  limits:
    cpu: "300"
    memory: 750Gi
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s
    expireAfter: Never
    
---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: pgo-only
spec:
  template:
    metadata:
      labels:
        nodeType: postgres-operator
        pingidentity.com/pgo: "true"
    spec:
      nodeClassRef:
        name: pgo-only
      taints:
        - effect: NoSchedule
          key: pingidentity.com/pgo-only
          value: "true"
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m", "r", "t"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["amd64"]
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["spot", "on-demand"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
  limits:
    cpu: "24"
    memory: 50Gi
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s
    expireAfter: Never

---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: non-consolidating
spec:
  template:
    metadata:
      labels:
        nodeType: non-consolidating
        pingidentity.com/non-consolidating: "true"
    spec:
      nodeClassRef:
        name: non-consolidating
      taints:
        - effect: NoSchedule
          key: pingidentity.com/non-consolidating
          value: "true"
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m", "r", "t"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["arm64"]
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["spot", "on-demand"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
  limits:
    cpu: "60"
    memory: 500Gi
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s
    expireAfter: Never

---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2 # Amazon Linux 2
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "default"
    Name: karpenter.sh/nodepool/fleet
    managed-by: "karpenter"
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: non-consolidating
spec:
  amiFamily: AL2 # Amazon Linux 2
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "non-consolidating"
    Name: karpenter.sh/nodepool/non-consolidating
    managed-by: "karpenter"
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: pgo-only
spec:
  amiFamily: AL2 # Amazon Linux 2
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "pgo-only"
    Name: karpenter.sh/nodepool/pgo-only
    managed-by: "karpenter"
